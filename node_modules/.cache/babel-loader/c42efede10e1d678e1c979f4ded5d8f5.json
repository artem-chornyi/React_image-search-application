{"ast":null,"code":"var _jsxFileName = \"/Users/achy/project/React_image-search-application/src/components/ImgCard/ImgCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport { Dialog, Grid, Button } from '@material-ui/core';\nimport { getUserCollections } from '../../api/appi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\n\nconst ImgCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    image,\n    imgSize\n  } = props;\n  const {\n    links,\n    user\n  } = image;\n  const [open, setOpen] = useState(false);\n  const [userCollections, setUserCollections] = useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    getUserCollections(user.username).then(response => {\n      setUserCollections(response);\n    }).catch(err => console.log(err));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const className = () => {\n    const size = imgSize === 'small' ? true : false;\n    return size ? classes.smallCard : classes.bigCard;\n  };\n\n  const classNameImg = () => {\n    const size = imgSize === 'small' ? true : false;\n    return size ? classes.img : classes.bigImg;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className(),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: links.download,\n      onClick: handleClickOpen,\n      className: classNameImg(),\n      alt: 'test'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      className: classes.dialog,\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      fullWidth: true,\n      scroll: 'body',\n      maxWidth: 'lg',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.top,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.profile_image.medium,\n          className: classes.profileImage,\n          alt: 'test'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.userInfo,\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.contentImg,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.links.download,\n            className: classes.imgModal,\n            alt: 'test'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: userCollections.map(foto => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: foto.urls.thumb,\n                alt: 'foto'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.userFotos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImgCard, \"++43NMsSfL0zMNmgndQ9XMeW0NM=\", false, function () {\n  return [useStyles];\n});\n\n_c = ImgCard;\nexport default ImgCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgCard\");","map":{"version":3,"sources":["/Users/achy/project/React_image-search-application/src/components/ImgCard/ImgCard.js"],"names":["React","useState","makeStyles","styles","Dialog","Grid","Button","getUserCollections","useStyles","ImgCard","props","classes","image","imgSize","links","user","open","setOpen","userCollections","setUserCollections","handleClickOpen","username","then","response","catch","err","console","log","handleClose","className","size","smallCard","bigCard","classNameImg","img","bigImg","download","dialog","top","profile_image","medium","profileImage","userInfo","name","content","contentImg","imgModal","root","map","foto","urls","thumb","userFotos"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport {\n    Dialog,\n    Grid,\n    Button,\n} from '@material-ui/core';\nimport { getUserCollections } from '../../api/appi'\n\n\nconst useStyles = makeStyles(styles);\n\nconst ImgCard = props => {\n    const classes = useStyles();\n    const { image, imgSize } = props;\n    const { links, user } = image;\n    const [open, setOpen] = useState(false);\n    const [userCollections, setUserCollections] = useState([]);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n\n        getUserCollections(user.username)\n        .then(response => {\n            setUserCollections(response);\n        })\n        .catch(err => console.log(err))\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const className = () => {\n        const size = imgSize === 'small' ? true : false;\n\n        return size ? classes.smallCard : classes.bigCard\n    }\n\n    const classNameImg = () => {\n        const size = imgSize === 'small' ? true : false;\n\n        return size ? classes.img : classes.bigImg\n    }\n\n    return (\n        <div className={ className() }>\n            <img src={ links.download } onClick={ handleClickOpen } className={ classNameImg() } alt={'test'} />\n            <Dialog\n                className={ classes.dialog }\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}\n                fullWidth={true}\n                scroll={'body'}\n                maxWidth={'lg'}\n            >\n                <div className={ classes.top } >\n                    <img src={ user.profile_image.medium } className={ classes.profileImage } alt={'test'} />\n                    <span className={ classes.userInfo} >\n                        { user.name }\n                    </span>\n                </div>\n                <div className={ classes.content }>\n                    <div className={ classes.contentImg } >\n                        <img src={ image.links.download } className={ classes.imgModal } alt={'test'} />\n                    </div>\n                    <Grid container className={classes.root}>\n                            <Grid item xs={12} md={3}>\n                                { userCollections.map(foto => (\n                                <div>\n                                    { <img src={ foto.urls.thumb } alt={'foto'} />}\n                                </div>\n                            )) }\n                            </Grid>\n                        </Grid>\n                    <div className={ classes.userFotos } >\n                        \n                        \n                    </div>\n                </div>\n                \n            </Dialog>\n        </div>\n    )\n}\n\nexport default ImgCard;"]},"metadata":{},"sourceType":"module"}